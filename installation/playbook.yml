#
# Tectonic - An academic Cyber Range
# Copyright (C) 2024 Grupo de Seguridad Informática, Universidad de la República,
# Uruguay
#
# This file is part of Tectonic.
#
# Tectonic is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Tectonic is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Tectonic.  If not, see <http://www.gnu.org/licenses/>.
#
- name: "Install and configure tectonic"
  hosts: all
  vars:
    - aws_access_key_id: ""
    - aws_secret_access_key: ""
    - gitlab_access_token: ""
    - gitlab_user: ""
    - ec_api_key: ""
    - create_ssh_key_pair: false

  tasks:
    - name: "Configure Hashicorp gpg key"
      block:
      - name: "Configure GPG key for apt package manager"
        ansible.builtin.apt_key:
          url: https://apt.releases.hashicorp.com/gpg
          id: 798AEC654E5C15428C8E42EEAA16FCBCA621E701
        when: ansible_pkg_mgr == "apt"
        become: true
    - name: "Configure Hashicorp repository"
      block:
      - name: "Configure repo por Debian/Ubuntu"
        ansible.builtin.apt_repository:
          repo: "deb https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"
        become: true
      - name: "Configure Hashicorp repository for RHEL/Centos"
        ansible.builtin.yum_repository:
          name: hashicorp
          description: Hashicorp Stable - $basearch
          baseurl: https://rpm.releases.hashicorp.com/RHEL/$releasever/$basearch/stable
          enabled: yes
          gpgcheck: yes
          gpgkey: https://rpm.releases.hashicorp.com/gpg
        when: ansible_os_family == "RedHat" or ansible_os_family == "Centos"
        become: true
      - name: "Configure Hashicorp repository for Fedora"
        ansible.builtin.yum_repository:
          name: hashicorp
          description: Hashicorp Stable - $basearch
          baseurl: https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable
          enabled: yes
          gpgcheck: yes
          gpgkey: https://rpm.releases.hashicorp.com/gpg
        when: ansible_os_family == "Fedora"
        become: true

    - name: "Install Terraform and Packer"
      ansible.builtin.package:
        name:
          - terraform
          - packer
        update_cache: yes
      become: true

    - name: "Install Python"
      block:
      - name: "Install Python for RHEL/Centos or Fedora"
        ansible.builtin.package:
          name:
            - python39
          update_cache: yes
        when: ansible_os_family == "RedHat" or ansible_os_family == "Centos" or ansible_os_family == "Fedora"
        become: true
      - name: "Install Python for Ubuntu/Debian"
        ansible.builtin.package:
          name:
            - python3.9
            - python3-pip
          update_cache: yes
        when: ansible_os_family == "Ubuntu" or ansible_os_family == "Debian" 
        become: true
      # - name: "Download get-pip.py for Ubuntu/Debian"
      #   ansible.builtin.get_url:
      #     url: https://bootstrap.pypa.io/get-pip.py
      #     dest: /tmp/get-pip.py
      #     mode: '0440'
      #   when: ansible_os_family == "Ubuntu" or ansible_os_family == "Debian" 
      #   become: true
      # - name: "Install pip for python3 Ubuntu/Debian"
      #   ansible.builtin.shell: sudo python3 /tmp/get-pip.py
      #   when: ansible_os_family == "Ubuntu" or ansible_os_family == "Debian" 
      #   become: true
      
    - name: "Install Ansible"
      ansible.builtin.pip:
        name: ansible
      become: true
      vars:
        ansible_python_interpreter: /usr/bin/python3.9

    - name: "Copy Python requirements"
      ansible.builtin.copy:
        src: "~/tectonic/python/requirements.txt"
        dest: "/tmp/requirements.txt"

    - name: "Install Python requirements"
      ansible.builtin.pip:
        requirements: /tmp/requirements.txt
      become: true
      vars:
        ansible_python_interpreter: /usr/bin/python3.9

    - name: "Create SSH key pair"
      block:
      - name: "Create SSH directory"
        ansible.builtin.file:
          path: "{{ ansible_user_dir }}/.ssh"
          state: directory
          owner: "{{ ansible_user_id }}"
          group: "{{ ansible_user_id }}"
          mode: '0700'
      - name: "Generate SSH key pair"
        community.crypto.openssh_keypair:
          path: "{{ ansible_user_dir }}/.ssh/id_rsa"
      when: create_ssh_key_pair

    - name: "Add GITLAB_USER environment variable"
      ansible.builtin.lineinfile:
        dest: "{{ ansible_user_dir }}/.bashrc"
        state: present
        insertafter: EOF
        regexp: "^export GITLAB_USER=.*$"
        line: "export GITLAB_USER={{ gitlab_user }}"
      when: gitlab_user != ""

    - name: "Add GITLAB_ACCESS_TOKEN environment variable"
      ansible.builtin.lineinfile:
        dest: "{{ ansible_user_dir }}/.bashrc"
        state: present
        insertafter: EOF
        regexp: "^export GITLAB_ACCESS_TOKEN=.*$"
        line: "export GITLAB_ACCESS_TOKEN={{ gitlab_access_token }}"
      when: aws_access_key_id != ""

    - name: "Add AWS_ACCESS_KEY_ID environment variables"
      ansible.builtin.lineinfile:
        dest: "{{ ansible_user_dir }}/.bashrc"
        state: present
        insertafter: EOF
        regexp: "^export AWS_ACCESS_KEY_ID=.*$"
        line: "export AWS_ACCESS_KEY_ID={{ aws_access_key_id }}"
      when: aws_access_key_id != ""

    - name: "Add AWS_SECRET_ACCESS_KEY environment variables"
      ansible.builtin.lineinfile:
        dest: "{{ ansible_user_dir }}/.bashrc"
        state: present
        insertafter: EOF
        regexp: "^export AWS_ACCESS_KEY_ID=.*$"
        line: "export AWS_SECRET_ACCESS_KEY={{ aws_secret_access_key }}"
      when: aws_secret_access_key != ""

    - name: "Add EC_API_KEY variables"
      ansible.builtin.lineinfile:
        dest: "{{ ansible_user_dir }}/.bashrc"
        state: present
        insertafter: EOF
        regexp: "^export EC_API_KEY=.*$"
        line: "export EC_API_KEY={{ ec_api_key }}"
      when: ec_api_key != ""