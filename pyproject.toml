[tool.poetry]
name = "tectonic-cyberrange"
version = "1.0.1"
authors = ["GSI-Fing-Udelar"]
description = "A Python package for the Tectonic Cyber Range project."
readme = "README.md"
keywords = ["cyberrange", "tectonic", "ansible", "terraform", "aws", "cloud", "security", "automation"]
license = "GPL-3.0-or-later"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent",
]
packages = [
    { include = "tectonic" }
]

homepage = "https://www.fing.edu.uy/inco/proyectos/tectonic"
documentation = "https://github.com/GSI-Fing-Udelar/tectonic/tree/main/docs"
repository = "https://github.com/GSI-Fing-Udelar/tectonic.git"

include = [
	{ path="tectonic/terraform", format = ["sdist", "wheel"] },
	{ path="tectonic/playbooks", format = ["sdist", "wheel"] },
	{ path="tectonic/services", format = ["sdist", "wheel"] },
	{ path="tectonic/image_generation", format = ["sdist", "wheel"] },
]


[tool.poetry.urls]
"Homepage" = "https://www.fing.edu.uy/inco/proyectos/tectonic"
"Bug Tracker" = "https://github.com/GSI-Fing-Udelar/tectonic/issues"

# Requirements
[tool.poetry.dependencies]
python = ">=3.10,<4.0"
bcrypt = "*"
passlib = "*"
boto3 = "*"
botocore = "*"
certifi = "*"
cffi = "*"
charset-normalizer = "*"
click = "*"
cryptography= "44.0.3"
decorator = "*"
deprecated = "*"
fabric = "*"
idna = "*"
invoke = "*"
jmespath = "*"
"packer.py" = "*"
paramiko = "*"
pycparser = "*"
pynacl = "*"
python-dateutil = "*"
python-terraform = "*"
pyyaml = "*"
requests = "2.32.4" #https://github.com/ansible-collections/community.docker/issues/868
requests-toolbelt = "*"
s3transfer = "*"
six = "*"
urllib3 = "*"
wrapt = "*"
ansible-runner = "*"
ansible = "8.7.0"
libvirt-python = "*"
elasticsearch = "*"
packaging = "*"
prettytable = "*"
beautifulsoup4 = "*"
bs4 = "*"
freezegun = "*"
docker = "*"
pyopenssl = ">=24.3"

[tool.poetry.dev-dependencies]
pytest = "8.4.1"
pytest-cov = "6.2.1"
pytest-mock = "3.14.1"
pytest-env = "1.1.5"
fabric = { version = "3.2.2", extras = ["pytest"] }
pylint = "3.3.8"
black = "24.10.0"
moto = { version = "4.2.14", extras = ["ec2"] }
responses = "0.25.8"
freezegun = "1.5.5"

[tool.semantic_release]
version_variable = "pyproject.toml:version"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "7.0"
pythonpath = "src"
addopts = [
    "--import-mode=importlib",
]
testpaths = [
    "tests",
]

[tool.poetry.scripts]
tectonic = "tectonic.cli:tectonic"
